% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/max_prob_pred_int.R
\name{mpdi_obj}
\alias{mpdi_obj}
\title{objective function for probability of a prediciton interval for 'small' sample sizes.}
\usage{
mpdi_obj(
  alpha,
  x,
  method = c("tdist", "conformal"),
  m.method = c("quantile", "deviation", "jackknife"),
  alpha.penalty = 0,
  scale = FALSE
)
}
\arguments{
\item{alpha}{miscoverage or 'error rate'}

\item{x}{a vector}

\item{method}{either 'tdist' (assumes normality) or 'conformal' (distribution-free)}

\item{m.method}{method used to compute conformal prediction interval: either "quantile", "deviation" or "jackknife"}

\item{alpha.penalty}{whether to include an alpha penalty (default 0 or 'no')}

\item{scale}{whether to scale the input vector. This only makes sense if the alpha.penalty is different from zero.}
}
\value{
a single value which represents a value that should be minimized
}
\description{
objective function for probability of a prediciton interval for 'small' sample sizes.
}
\details{
Objective funciton for optimization

The idea is to find the maximum level of probability that will produce a prediction interval
         which matches the minimum and maximum values in the observed sample.  The distance is calculated as abs(x.min - calc.lower.bound) + abs(x.max - calc.upper.bound).
}
\examples{
\dontrun{
set.seed(12345)
x <- rnorm(10)
alphas <- seq(0,1, 0.05)
objf <- numeric(length(alphas))
for(i in 1:length(objf)){
  objf[i] <- mpdi_obj(alphas[i], x = x, method = "conformal")
}
qplot(alphas, objf, geom = "line")
## Trying the t-distribution
y <- rt(10, df = 1)
alphas <- seq(0,1, 0.05)
objf <- numeric(length(alphas))
for(i in 1:length(objf)){
  objf[i] <- mpdi_obj(alphas[i], x = y, method = "conformal")
}
qplot(alphas, objf, geom = "line")
}
}
